# Pipeline automation

## Rules

rule learn_explanation:
    input:
        model = "../datasets-and-models/models/model_{model}",
        data = "../datasets-and-models/models/data_{model}.joblib",
        feature_names = "../datasets-and-models/models/feature_names.joblib"

    params:
        balance_training = True,
        balance_testing = True

    output:
        "../results/trepan-{model}.cloudpickle"
    
    log:
        "logs/trepan-{model}-log.txt"

    script:
        "learn_trepan.py"

rule learn_trepan_optt:
    input:
        model = "../datasets-and-models/models/model_{model}",
        data = "../datasets-and-models/models/data_{model}.joblib",
        feature_names = "../datasets-and-models/models/feature_names.joblib"

    params:
        balance_training = True,
        balance_testing = True,
        optimal_threshold = True

    output:
        "../results/trepan-ot-{model}.cloudpickle"
    
    log:
        "logs/trepan-ot-{model}-log.txt"

    script:
        "learn_trepan.py"

rule plot_curve:
    input:
        model = "../datasets-and-models/models/model_{model}",
        data = "../datasets-and-models/models/data_{model}.joblib",
        explanations = [
            "../results/trepan-{model}.cloudpickle",
            "../results/trepan-ot-{model}.cloudpickle"
        ],
        rf_threshold = "../results/trepan-ot-{model}-threshold.txt"
    
    params:
        labels = ['trepan', 'trapan-ot']

    output:
        roc = "../results/trepan-{model}-rocs.png",
        agreement = "../results/trepan-{model}-agreements.png"
    
    script:
        "draw_rocs.py"